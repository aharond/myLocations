{"version":3,"sources":["constants/categoryConstants.js","actions/categoryAction.js","components/Categories.js","enums/storage.js","enums/category.js","components/Toolbar.js","components/AppLayout.js","providers/localStorageProvider.js","reducers/categoryReducer.js","reducers/index.js","configureStore.js","middlewares/loggerMiddleware.js","components/Root.js","index.js"],"names":["categoryConstants","addCategory","category","type","payload","deleteCategory","updateCategory","oldCategory","newCategory","Categories","_ref","categories","_useState","useState","_useState2","Object","slicedToArray","oldCategoryName","setOldCategoryName","_useState3","_useState4","categoryName","setCategoryName","_useState5","_useState6","isCategorySelected","setIsCategorySelected","_useState7","_useState8","errorName","setErrorName","dispatch","useDispatch","onDeleteCategory","useCallback","e","name","target","closest","dataset","onUpdateCategory","newCategoryName","_","isEmpty","some","onEdit","onCancel","onCategoryNameChanged","value","onRowSelected","getActions","isEditCategory","react_default","a","createElement","Fragment","Col","sm","Button","onClick","className","size","Container","Row","map","_ref2","index","isSelectedCategory","rowClassName","cx","selected","key","data-name","title","Form","Control","onChange","STORAGE","CATEGORY_OPTIONS","LIST","NEW","Toolbar","categoryOption","setCategoryOption","Group","as","controlId","Label","column","optionValue","toNumber","autocomplete","md","AppLayout","useSelector","categoryReducer","localStorageProvider","item","serializedItem","JSON","stringify","localStorage","setItem","err","Error","result","getItem","parse","undefined","callback","updatedItem","this","get","save","INITIAL_STATE","allReducers","combineReducers","state","arguments","length","action","addedCategories","getUpdatedStorage","concat","objectSpread","newCategories","remove","updatedCategories","rootReducer","composeEnhancers","createLogger","stateTransformer","reduce","keys","res","stateKey","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Store","initialState","createStore","applyMiddleware","apply","toConsumableArray","thunkMiddleware","App","es","store","create","ReactDOM","render","Root","document","querySelector"],"mappings":"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","file":"static/js/main.47b33c78.chunk.js","sourcesContent":["export const categoryConstants = {\r\n    ADD_CATEGORY: '@@ADD_CATEGORY',\r\n    DELETE_CATEGORY: '@@DELETE_CATEGORY',\r\n    UPDATE_CATEGORY: '@@UPDATE_CATEGORY',\r\n    VIEW_CATEGORY: '@@VIEW_CATEGORY',\r\n}","import { categoryConstants } from '../constants';\r\n\r\nexport const addCategory = (category) => {\r\n    return {\r\n        type: categoryConstants.ADD_CATEGORY,\r\n        payload: {category}\r\n    }\r\n}\r\n\r\nexport const deleteCategory = (category) => {\r\n    return {\r\n        type: categoryConstants.DELETE_CATEGORY,\r\n        payload: {category}\r\n    }\r\n}\r\nexport const updateCategory = (oldCategory, newCategory) => {\r\n    return {\r\n        type: categoryConstants.UPDATE_CATEGORY,\r\n        payload: {oldCategory, newCategory}\r\n    }\r\n}\r\n","import React, { useState, useCallback } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport { useDispatch } from 'react-redux'\r\nimport cx from 'classnames'\r\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap'\r\nimport { deleteCategory, updateCategory } from '../actions'\r\n\r\nexport default function Categories({ categories }) {\r\n    const [oldCategoryName, setOldCategoryName] = useState('');\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [isCategorySelected, setIsCategorySelected] = useState('');\r\n    const [errorName, setErrorName] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onDeleteCategory = useCallback((e) => {\r\n        dispatch(deleteCategory({ name: e.target.closest('.row').dataset.name }))\r\n    })\r\n    const onUpdateCategory = useCallback((e) => {\r\n        const oldCategoryName = e.target.closest('.row').dataset.name;\r\n        const newCategoryName = categoryName;\r\n        if (oldCategoryName !== newCategoryName) {\r\n            if (_.isEmpty(newCategoryName)) {\r\n                setErrorName('Category name can not be empty')\r\n            } else if (_.some(categories, { name: newCategoryName })) {\r\n                setErrorName('Category name exist')\r\n            } else {\r\n                dispatch(updateCategory({ name: e.target.closest('.row').dataset.name }, { name: newCategoryName }))\r\n            }\r\n        } else {\r\n            setOldCategoryName('')\r\n        }\r\n    })\r\n    const onEdit = useCallback((e) => {\r\n        const name = e.target.closest('.row').dataset.name\r\n        setOldCategoryName(name)\r\n        setCategoryName(name)\r\n    })\r\n    const onCancel = useCallback((e) => {\r\n        setOldCategoryName('')\r\n        setErrorName('')\r\n    })\r\n    const onCategoryNameChanged = useCallback((e) => {\r\n        setCategoryName(e.target.value)\r\n    })\r\n    const onRowSelected = useCallback((e) => {\r\n        setIsCategorySelected(e.target.dataset.name)\r\n    })\r\n\r\n    const getActions = useCallback((isEditCategory) => {\r\n        return isEditCategory ?\r\n            (<>\r\n                <Col sm={1.1}>\r\n                    <Button onClick={onUpdateCategory}>Save</Button>\r\n                </Col>\r\n                <Col>\r\n                    <Button onClick={onCancel}>Cancel</Button>\r\n                </Col>\r\n            </>)\r\n            : (<>\r\n                <Col sm={1.1}>\r\n                    <Button onClick={onEdit}>Edit</Button>\r\n                </Col>\r\n                <Col>\r\n                    <Button onClick={onDeleteCategory}>Delete</Button>\r\n                </Col>\r\n            </>)\r\n    })\r\n    return (\r\n        <div className='category-list-container'>\r\n            {_.size(categories) > 0\r\n                ? <Container>\r\n                    <Row className='category-list-header'>\r\n                        <Col sm={7}>Name</Col>\r\n                        <Col>Actions</Col>\r\n                    </Row>\r\n                    {_.map(categories, ({ name }, index) => {\r\n                        const isEditCategory = oldCategoryName === name\r\n                        const isSelectedCategory = isCategorySelected === name\r\n                        const rowClassName = cx('category-list-content', { selected: isSelectedCategory })\r\n                        return (\r\n                            <Row key={index} data-name={name} className={rowClassName} onClick={onRowSelected}>\r\n                                <Col sm={7} title={name}>\r\n                                    {isEditCategory ? <Form.Control onChange={onCategoryNameChanged} value={categoryName} /> : name}\r\n                                </Col>\r\n                                    {errorName && isEditCategory && <div className='error'>{errorName}</div>}\r\n                                {isSelectedCategory || isEditCategory ? getActions(isEditCategory) : null}\r\n                            </Row>\r\n                        )\r\n                    })}\r\n                </Container>\r\n                : 'No Categories'}\r\n        </div>\r\n    );\r\n}\r\nCategories.propTypes = {\r\n    categories: PropTypes.array\r\n}","export const STORAGE = {\r\n    CATEGORY: 'category'\r\n};","export const CATEGORY_OPTIONS = {\r\n    LIST: { name: 'category list', value: 1 },\r\n    NEW: { name: 'new category', value: 2 }\r\n};","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap'\r\nimport { addCategory } from '../actions'\r\nimport { CATEGORY_OPTIONS } from '../enums'\r\n\r\nexport default function Toolbar({ categories }) {\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [errorName, setErrorName] = useState('');\r\n    const [categoryOption, setCategoryOption] = useState(CATEGORY_OPTIONS.LIST.value);\r\n\r\n    const dispatch = useDispatch()\r\n    const onCategoryNameChanged = (e) => {\r\n        setCategoryName(e.target.value)\r\n    }\r\n    \r\n    const onCategoryChanged = (e) => {\r\n        const optionValue = _.toNumber(e.target.value)\r\n        setCategoryOption(optionValue)\r\n    }\r\n\r\n    const addNewCategory = () => {\r\n        if (_.isEmpty(categoryName)) {\r\n            setErrorName('Category name can not be empty')\r\n        } else if (_.some(categories, { name: categoryName })) {\r\n            setErrorName('Category name exist')\r\n        } else {\r\n            dispatch(addCategory({ name: categoryName }))\r\n            setCategoryName('');\r\n            setErrorName('')\r\n        }\r\n    }\r\n    return (\r\n        <Container className='toolBar-container'>\r\n            <Row>\r\n                <Col sm={5}>\r\n                    <Form.Group as={Row} controlId='categoryOptions'>\r\n                        <Form.Label column sm={2.5}>Categories</Form.Label>\r\n                        <Col >\r\n                            <Form.Control as=\"select\" onChange={onCategoryChanged}>\r\n                                {_.map(CATEGORY_OPTIONS, ({value, name}) => (<option key={value} value={value}>{name}</option>))}\r\n                            </Form.Control>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Col>\r\n                {categoryOption === CATEGORY_OPTIONS.NEW.value ? <>\r\n                    <Col sm={5}>\r\n                        <Form.Group as={Row} controlId='categoryName'>\r\n                            <Form.Label column sm={3.5}>Category Name:</Form.Label>\r\n                            <Col>\r\n                                <Form.Control autocomplete='off' onChange={onCategoryNameChanged} value={categoryName} />\r\n                                {errorName && <div className='error'>{errorName}</div>}\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                        <Button onClick={addNewCategory}>new category</Button>\r\n                    </Col>\r\n                </> : null}\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\nToolbar.propTypes = {\r\n    categories: PropTypes.array\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { Categories, Toolbar } from './index'\r\n\r\nexport default function AppLayout() {\r\n    const categories = useSelector(({ categoryReducer }) => categoryReducer.categories)\r\n    return (\r\n        <>\r\n            <Toolbar categories={categories} />\r\n            <Categories categories={categories} />\r\n        </>\r\n    );\r\n}","class LocalStorageProvider {\r\n    save(key, item) {\r\n        try {\r\n            const serializedItem = JSON.stringify(item);\r\n            localStorage.setItem(key, serializedItem);\r\n        } catch (err) {\r\n            throw new Error(err);\r\n        }\r\n    }\r\n    get(key) {\r\n        let result;\r\n        try {\r\n            const serializedItem = localStorage.getItem(key);\r\n            result = JSON.parse(serializedItem);\r\n        } catch (err) {\r\n            result = undefined;\r\n        }\r\n        return result;\r\n    }\r\n    getUpdatedStorage(key, callback) {\r\n        const item = this.get(key)\r\n        const updatedItem = callback(item)\r\n        this.save(key, updatedItem)\r\n        return updatedItem\r\n    }\r\n}\r\n\r\nexport default new LocalStorageProvider();","import _ from 'lodash'\r\nimport { categoryConstants } from '../constants';\r\nimport { localStorageProvider } from '../providers';\r\nimport { STORAGE } from '../enums';\r\n\r\nconst INITIAL_STATE = {\r\n    categories: localStorageProvider.get(STORAGE.CATEGORY)\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case categoryConstants.ADD_CATEGORY:\r\n            const addedCategories = localStorageProvider.getUpdatedStorage(STORAGE.CATEGORY, (categories) => {\r\n                const existingCategories = categories || []\r\n                return existingCategories.concat(payload.category)\r\n            });\r\n            return {\r\n                ...state,\r\n                categories: addedCategories\r\n            }\r\n        case categoryConstants.DELETE_CATEGORY:\r\n            const newCategories = localStorageProvider.getUpdatedStorage(STORAGE.CATEGORY, (categories) => {\r\n                _.remove(categories, { name: payload.category.name });\r\n                return categories;\r\n            });\r\n            return {\r\n                ...state,\r\n                categories: newCategories\r\n            }\r\n        case categoryConstants.UPDATE_CATEGORY:\r\n            const updatedCategories = localStorageProvider.getUpdatedStorage(STORAGE.CATEGORY, (categories) => {\r\n                return _.map(categories, item => item.name === payload.oldCategory.name ? payload.newCategory : item)\r\n            });\r\n            return {\r\n                ...state,\r\n                categories: updatedCategories\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {combineReducers} from 'redux';\r\nimport categoryReducer from './categoryReducer'\r\n\r\nconst allReducers = combineReducers({\r\n    categoryReducer\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n    return allReducers(state, action);\r\n};\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport {loggerMiddleware} from './middlewares';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst getMiddlewares = () => {\r\n    if (process.env.NODE_ENV === 'development') {\r\n        return [thunkMiddleware, loggerMiddleware];\r\n    }\r\n    return [thunkMiddleware];\r\n};\r\n\r\nclass Store {\r\n    create (initialState) {\r\n        return createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(...getMiddlewares())));\r\n    }\r\n}\r\n\r\nexport default (initialState) => {\r\n    const configureStore = new Store();\r\n    const store = configureStore.create(initialState);\r\n    if (module.hot) {\r\n        module.hot.accept('./reducers', () => {\r\n            const nextRootReducer = require('./reducers/index');\r\n            store.replaceReducer(nextRootReducer);\r\n        });\r\n    }\r\n    return store;\r\n};\r\n","import {createLogger} from 'redux-logger';\r\nimport _ from 'lodash';\r\n\r\nexport default createLogger({\r\n    stateTransformer: (state) => {\r\n        return _.reduce(_.keys(state), (res, stateKey) => {\r\n            res[stateKey] = state[stateKey];\r\n            return res;\r\n        }, {});\r\n    }\r\n});","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport AppLayout from './AppLayout';\r\nimport configureStore from '../configureStore';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../stylesheets/main.scss';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={configureStore()}>\r\n            <AppLayout />\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Root from './components/Root';\r\n\r\n\r\nReactDOM.render(<Root />, document.querySelector('#app'));"],"sourceRoot":""}